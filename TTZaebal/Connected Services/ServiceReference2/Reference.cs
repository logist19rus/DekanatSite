//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторного создания кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference2
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GradesStudentsDto", Namespace="http://schemas.datacontract.org/2004/07/ServiceTimeTable.EntitryDekanatDto")]
    public partial class GradesStudentsDto : object
    {
        
        private string ControlTypeField;
        
        private string NameStudentsField;
        
        private string ScoreField;
        
        private System.Nullable<int> SessionCourseField;
        
        private string SessionNameField;
        
        private string SessionYearField;
        
        private string SubjectField;
        
        private int idField;
        
        private System.Nullable<int> idStudentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlType
        {
            get
            {
                return this.ControlTypeField;
            }
            set
            {
                this.ControlTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameStudents
        {
            get
            {
                return this.NameStudentsField;
            }
            set
            {
                this.NameStudentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Score
        {
            get
            {
                return this.ScoreField;
            }
            set
            {
                this.ScoreField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SessionCourse
        {
            get
            {
                return this.SessionCourseField;
            }
            set
            {
                this.SessionCourseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionName
        {
            get
            {
                return this.SessionNameField;
            }
            set
            {
                this.SessionNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionYear
        {
            get
            {
                return this.SessionYearField;
            }
            set
            {
                this.SessionYearField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                this.SubjectField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> idStudents
        {
            get
            {
                return this.idStudentsField;
            }
            set
            {
                this.idStudentsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IServiceStudents")]
    public interface IServiceStudents
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/GetGradesStudentId", ReplyAction="http://tempuri.org/IServiceStudents/GetGradesStudentIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference2.GradesStudentsDto>> GetGradesStudentIdAsync(string sessionName, string sessionYear, int idStudents);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IServiceStudentsChannel : ServiceReference2.IServiceStudents, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServiceStudentsClient : System.ServiceModel.ClientBase<ServiceReference2.IServiceStudents>, ServiceReference2.IServiceStudents
    {
        
        /// <summary>
        /// Реализуйте этот разделяемый метод для настройки конечной точки службы.
        /// </summary>
        /// <param name="serviceEndpoint">Настраиваемая конечная точка</param>
        /// <param name="clientCredentials">Учетные данные клиента.</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceStudentsClient() : 
                base(ServiceStudentsClient.GetDefaultBinding(), ServiceStudentsClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceStudents.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceStudentsClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceStudentsClient.GetBindingForEndpoint(endpointConfiguration), ServiceStudentsClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceStudentsClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceStudentsClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceStudentsClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceStudentsClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceStudentsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference2.GradesStudentsDto>> GetGradesStudentIdAsync(string sessionName, string sessionYear, int idStudents)
        {
            return base.Channel.GetGradesStudentIdAsync(sessionName, sessionYear, idStudents);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceStudents))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceStudents))
            {
                return new System.ServiceModel.EndpointAddress("http://10.10.0.200:8733/Design_Time_Addresses/ServiceTimeTable/ServiceStudents/");
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceStudentsClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceStudents);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceStudentsClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceStudents);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceStudents,
        }
    }
}
